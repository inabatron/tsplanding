[{"/Users/inabat/Documents/projects/software-engineering/tsplanding/landing/landing/src/index.js":"1","/Users/inabat/Documents/projects/software-engineering/tsplanding/landing/landing/src/reportWebVitals.js":"2","/Users/inabat/Documents/projects/software-engineering/tsplanding/landing/landing/src/App.js":"3","/Users/inabat/Documents/projects/software-engineering/tsplanding/landing/landing/src/components/Navbar.jsx":"4","/Users/inabat/Documents/projects/software-engineering/tsplanding/landing/landing/src/components/CarouselComponent.jsx":"5"},{"size":254,"mtime":1690976701407,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1690961480032,"results":"8","hashOfConfig":"7"},{"size":724,"mtime":1690976874893,"results":"9","hashOfConfig":"7"},{"size":5403,"mtime":1690976351552,"results":"10","hashOfConfig":"7"},{"size":847,"mtime":1690975744676,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ivbk9o",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"26"},"/Users/inabat/Documents/projects/software-engineering/tsplanding/landing/landing/src/index.js",[],[],"/Users/inabat/Documents/projects/software-engineering/tsplanding/landing/landing/src/reportWebVitals.js",[],[],[],"/Users/inabat/Documents/projects/software-engineering/tsplanding/landing/landing/src/App.js",[],[],"/Users/inabat/Documents/projects/software-engineering/tsplanding/landing/landing/src/components/Navbar.jsx",["31","32"],[],"import { Fragment } from 'react'\nimport { Disclosure, Menu, Transition } from '@headlessui/react'\nimport { Bars3Icon, BellIcon, XMarkIcon } from '@heroicons/react/24/outline'\nimport logo from './logo.png';\nconst navigation = [\n  { name: 'Home', href: '#section1', current: true },\n  { name: 'About Us', href: '#section2', current: false }\n]\n\nfunction classNames(...classes) {\n  return classes.filter(Boolean).join(' ')\n}\n\nexport default function Example() {\n  return (\n    <Disclosure as=\"nav\" className=\"bg-gray-800\">\n      {({ open }) => (\n        <>\n          <div className=\"mx-auto max-w-7xl px-2 sm:px-6 lg:px-8\">\n            <div className=\"relative flex h-16 items-center justify-between\">\n              <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\n                {/* Mobile menu button*/}\n                <Disclosure.Button className=\"relative inline-flex items-center justify-center rounded-md p-2 text-gray-400 hover:bg-gray-700 hover:text-white focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\">\n                  <span className=\"absolute -inset-0.5\" />\n                  <span className=\"sr-only\">Open main menu</span>\n                  {open ? (\n                    <XMarkIcon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  ) : (\n                    <Bars3Icon className=\"block h-6 w-6\" aria-hidden=\"true\" />\n                  )}\n                </Disclosure.Button>\n              </div>\n              <div className=\"flex flex-1 items-center justify-center sm:items-stretch sm:justify-start\">\n                <div className=\"flex flex-shrink-0 items-center\">\n                  <img\n                    className=\"h-9 w-auto\"\n                    src={logo}\n                    alt=\"Your Company\"\n                  />\n                </div>\n                <div className=\"hidden sm:ml-6 sm:block\">\n                  <div className=\"flex space-x-4\">\n                    {navigation.map((item) => (\n                      <a\n                        key={item.name}\n                        href={item.href}\n                        className={classNames(\n                          item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                          'rounded-md px-3 py-2 text-sm font-medium'\n                        )}\n                        aria-current={item.current ? 'page' : undefined}\n                      >\n                        {item.name}\n                      </a>\n                    ))}\n                  </div>\n                </div>\n              </div>\n              <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\n                <button\n                  type=\"button\"\n                  className=\"relative rounded-full bg-gray-800 p-1 text-gray-400 hover:text-white focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\"\n                >\n                  <span className=\"absolute -inset-1.5\" />\n                  <span className=\"sr-only\">View notifications</span>\n                  <BellIcon className=\"h-6 w-6\" aria-hidden=\"true\" />\n                </button>\n\n                {/* Profile dropdown */}\n                {/* <Menu as=\"div\" className=\"relative ml-3\">\n                  <div>\n                    <Menu.Button className=\"relative flex rounded-full bg-gray-800 text-sm focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-gray-800\">\n                      <span className=\"absolute -inset-1.5\" />\n                      <span className=\"sr-only\">Open user menu</span>\n                      <img\n                        className=\"h-8 w-8 rounded-full\"\n                        src=\"https://images.unsplash.com/photo-1472099645785-5658abf4ff4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=facearea&facepad=2&w=256&h=256&q=80\"\n                        alt=\"\"\n                      />\n                    </Menu.Button>\n                  </div>\n                  <Transition\n                    as={Fragment}\n                    enter=\"transition ease-out duration-100\"\n                    enterFrom=\"transform opacity-0 scale-95\"\n                    enterTo=\"transform opacity-100 scale-100\"\n                    leave=\"transition ease-in duration-75\"\n                    leaveFrom=\"transform opacity-100 scale-100\"\n                    leaveTo=\"transform opacity-0 scale-95\"\n                  >\n                  </Transition>\n                </Menu> */}\n              </div>\n            </div>\n          </div>\n\n          <Disclosure.Panel className=\"sm:hidden\">\n            <div className=\"space-y-1 px-2 pb-3 pt-2\">\n              {navigation.map((item) => (\n                <Disclosure.Button\n                  key={item.name}\n                  as=\"a\"\n                  href={item.href}\n                  className={classNames(\n                    item.current ? 'bg-gray-900 text-white' : 'text-gray-300 hover:bg-gray-700 hover:text-white',\n                    'block rounded-md px-3 py-2 text-base font-medium'\n                  )}\n                  aria-current={item.current ? 'page' : undefined}\n                >\n                  {item.name}\n                </Disclosure.Button>\n              ))}\n            </div>\n          </Disclosure.Panel>\n        </>\n      )}\n    </Disclosure>\n  )\n}",[],"/Users/inabat/Documents/projects/software-engineering/tsplanding/landing/landing/src/components/CarouselComponent.jsx",["33"],[],"import React from 'react';\nimport { Carousel } from 'react-responsive-carousel';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport appImg from './screen.png'\nconst images = [\n    appImg,\n  \"https://cdn.discordapp.com/attachments/1125374453220638731/1133366802211160114/inabatron_a_brown_haired_girl_in_a_whimsical_cozy_fairy_tale_ci_0c03d64d-75c6-4210-a6cd-5f9f46608760.png\",\n\n]\n\nexport function AnimatedCarousel() {\n  return (\n    <Carousel\n      autoPlay\n      infiniteLoop\n      interval={2000}\n      showStatus={false}\n      showThumbs={false}\n      dynamicHeight={false}\n      className=\"rounded-xl\"\n    >\n      {images.map((imageUrl, index) => (\n        <div key={index}>\n          <img src={imageUrl} alt={`image ${index + 1}`} className=\"h-full w-full object-cover\" />\n        </div>\n      ))}\n    </Carousel>\n  );\n}\n\n",{"ruleId":"34","severity":1,"message":"35","line":2,"column":22,"nodeType":"36","messageId":"37","endLine":2,"endColumn":26},{"ruleId":"34","severity":1,"message":"38","line":2,"column":28,"nodeType":"36","messageId":"37","endLine":2,"endColumn":38},{"ruleId":"39","severity":1,"message":"40","line":24,"column":11,"nodeType":"41","endLine":24,"endColumn":99},"no-unused-vars","'Menu' is defined but never used.","Identifier","unusedVar","'Transition' is defined but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement"]