{"ast":null,"code":"var _jsxFileName = \"/Users/inabat/Documents/projects/software-engineering/densysme-frontend/src/components/details/confirmation.js\",\n  _s = $RefreshSig$();\nimport \"./confirmation.css\";\nimport FormInput from \"./component/FormInput\";\nimport * as React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport classes from \"../list/styles.module.css\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { ScheduleApi } from \"../../client/backend-api/schedule\";\nimport { FormControl, InputLabel, MenuItem, Select } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Confirmation = (effect, deps) => {\n  _s();\n  const {\n    doctorId,\n    appointmentDay\n  } = useParams();\n  const navigate = useNavigate();\n  const [timeslots, setTimeslots] = useState([]); //default value\n\n  const [values, setValues] = useState({\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    phonenumber: \"\",\n    timeslot: \"\"\n  });\n  const [selectedSlot, setSelectedSlot] = useState('');\n  const inputs = [{\n    id: 1,\n    name: \"name\",\n    type: \"text\",\n    placeholder: \"Name\",\n    errorMessage: \"Name should be 3-16 characters and shouldn't include any special character!\",\n    label: \"Enter your name\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    required: true\n  }, {\n    id: 2,\n    name: \"surname\",\n    type: \"text\",\n    placeholder: \"Surname\",\n    errorMessage: \"Surname should be 3-16 characters and shouldn't include any special character!\",\n    label: \"Enter your surname\",\n    pattern: \"^[A-Za-z0-9]{3,16}$\",\n    required: true\n  }, {\n    id: 3,\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"Email\",\n    errorMessage: \"It should be a valid email address!\",\n    label: \"Email\",\n    required: true\n  }, {\n    id: 4,\n    name: \"phonenumber\",\n    type: \"text\",\n    placeholder: \"Phone number\",\n    errorMessage: \"Enter only numbers\",\n    label: \"Enter phone number\",\n    pattern: \"^[0-9]+$\",\n    required: true\n  }];\n  const fetchTimeslots = async (doctorId, appointmentDay) => {\n    const timeslots = await ScheduleApi.getTimeSlotsOfDoc(doctorId, appointmentDay);\n    setTimeslots(timeslots);\n  };\n  const addAnAppointment = async (email, doctorId, day, timeSlot) => {\n    await ScheduleApi.addAnAppointment(email, doctorId, day, timeSlot);\n  };\n  useEffect(() => {\n    fetchTimeslots(doctorId, appointmentDay).catch(console.error);\n  }, [doctorId, appointmentDay]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values.email, doctorId, appointmentDay, selectedSlot);\n    addAnAppointment(values.email, doctorId, appointmentDay, selectedSlot).then(r => console.log(r));\n    navigate(`/admin/schedule`);\n  };\n  const onChange = e => {\n    setValues({\n      ...values,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleChange = event => {\n    setSelectedSlot(event.target.value);\n    values.timeslot = event.target.value;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Confirmation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), inputs.map(input => /*#__PURE__*/_jsxDEV(FormInput, {\n        ...input,\n        value: values[input.name],\n        onChange: onChange\n      }, input.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: classes.actionsContainer,\n        children: [\"Select a timeslot\", /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"Slot\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: selectedSlot,\n            label: \"Slot\",\n            onChange: handleChange,\n            children: [!timeslots[0] && /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: '0',\n              children: \"09:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this), !timeslots[1] && /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: '1',\n              children: \"10:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 21\n            }, this), !timeslots[2] && /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: '2',\n              children: \"11:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this), !timeslots[3] && /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: '3',\n              children: \"12:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 21\n            }, this), !timeslots[4] && /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: '4',\n              children: \"13:00\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \" Confirm \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 7\n  }, this);\n};\n_s(Confirmation, \"eH6qrhAcinSXGGdLH6lXV1z+Z60=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = Confirmation;\nvar _c;\n$RefreshReg$(_c, \"Confirmation\");","map":{"version":3,"names":["FormInput","React","useEffect","useState","classes","useNavigate","useParams","ScheduleApi","FormControl","InputLabel","MenuItem","Select","Confirmation","effect","deps","doctorId","appointmentDay","navigate","timeslots","setTimeslots","values","setValues","name","surname","email","phonenumber","timeslot","selectedSlot","setSelectedSlot","inputs","id","type","placeholder","errorMessage","label","pattern","required","fetchTimeslots","getTimeSlotsOfDoc","addAnAppointment","day","timeSlot","catch","console","error","handleSubmit","e","preventDefault","log","then","r","onChange","target","value","handleChange","event","map","input","actionsContainer"],"sources":["/Users/inabat/Documents/projects/software-engineering/densysme-frontend/src/components/details/confirmation.js"],"sourcesContent":["import \"./confirmation.css\";\nimport FormInput from \"./component/FormInput\";\nimport * as React from \"react\";\nimport {useEffect, useState} from \"react\";\nimport classes from \"../list/styles.module.css\";\nimport {useNavigate, useParams} from \"react-router-dom\";\nimport {ScheduleApi} from \"../../client/backend-api/schedule\";\nimport {FormControl, InputLabel, MenuItem, Select} from \"@mui/material\";\n\n\nexport const Confirmation = (effect, deps) => {\n  const {doctorId, appointmentDay} = useParams()\n  const navigate = useNavigate()\n  const [timeslots, setTimeslots] = useState([]); //default value\n\n  const [values, setValues] = useState({\n    name: \"\",\n    surname: \"\",\n    email: \"\",\n    phonenumber: \"\",\n    timeslot: \"\"\n  });\n\n\n  const [selectedSlot, setSelectedSlot] = useState('')\n\n\n  const inputs = [\n    {\n      id: 1,\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Name\",\n      errorMessage:\n          \"Name should be 3-16 characters and shouldn't include any special character!\",\n      label: \"Enter your name\",\n      pattern: \"^[A-Za-z0-9]{3,16}$\",\n      required: true\n    },\n    {\n      id: 2,\n      name: \"surname\",\n      type: \"text\",\n      placeholder: \"Surname\",\n      errorMessage:\n          \"Surname should be 3-16 characters and shouldn't include any special character!\",\n      label: \"Enter your surname\",\n      pattern: \"^[A-Za-z0-9]{3,16}$\",\n      required: true\n    },\n    {\n      id: 3,\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      errorMessage: \"It should be a valid email address!\",\n      label: \"Email\",\n      required: true\n    },\n    {\n      id: 4,\n      name: \"phonenumber\",\n      type: \"text\",\n      placeholder: \"Phone number\",\n      errorMessage: \"Enter only numbers\",\n      label: \"Enter phone number\",\n      pattern: \"^[0-9]+$\",\n      required: true\n    }\n  ];\n\n  const fetchTimeslots = async (doctorId, appointmentDay) => {\n    const timeslots = await ScheduleApi.getTimeSlotsOfDoc(doctorId, appointmentDay)\n    setTimeslots(timeslots)\n  }\n\n  const addAnAppointment = async(email, doctorId, day, timeSlot) => {\n    await ScheduleApi.addAnAppointment(email, doctorId, day, timeSlot)\n  }\n\n  useEffect(() => {\n    fetchTimeslots(doctorId, appointmentDay).catch(console.error)\n  }, [doctorId, appointmentDay])\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(values.email, doctorId, appointmentDay, selectedSlot)\n    addAnAppointment(values.email, doctorId, appointmentDay, selectedSlot).then(r =>\n        console.log(r)\n    )\n      navigate(`/admin/schedule`)\n  };\n\n  const onChange = (e) => {\n    setValues({ ...values, [e.target.name]: e.target.value });\n  };\n\n  const handleChange = (event) => {\n    setSelectedSlot(event.target.value);\n    values.timeslot = event.target.value\n  };\n\n  return (\n      <div className=\"app\">\n        <form onSubmit={handleSubmit}>\n          <h1>Confirmation</h1>\n          {inputs.map((input) => (\n              <FormInput\n                  key={input.id}\n                  {...input}\n                  value={values[input.name]}\n                  onChange={onChange}\n              />\n          ))}\n          <label className={classes.actionsContainer}>\n            Select a timeslot\n            <FormControl fullWidth required={true}>\n              <InputLabel id=\"demo-simple-select-label\">Slot</InputLabel>\n              <Select\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={selectedSlot}\n                  label=\"Slot\"\n                  onChange={handleChange}\n              >\n                {!timeslots[0] && (\n                    <MenuItem value={'0'}>09:00</MenuItem>\n                )}\n                {!timeslots[1] && (\n                    <MenuItem value={'1'}>10:00</MenuItem>\n                )}\n                {!timeslots[2] && (\n                    <MenuItem value={'2'}>11:00</MenuItem>\n                )}\n                {!timeslots[3] && (\n                    <MenuItem value={'3'}>12:00</MenuItem>\n                )}\n                {!timeslots[4] && (\n                    <MenuItem value={'4'}>13:00</MenuItem>\n                )}\n              </Select>\n            </FormControl>\n          </label>\n          <button> Confirm </button>\n        </form>\n\n      </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}