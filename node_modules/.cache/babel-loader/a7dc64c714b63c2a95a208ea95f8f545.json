{"ast":null,"code":"var _jsxFileName = \"/Users/inabat/Documents/projects/software-engineering/densysme-frontend/src/components/main-pages/mainpage-for-patient.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport classes from \"./styles.module.css\";\nimport PrintIcon from '@mui/icons-material/Print';\nimport { Button, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TablePagination, TableRow, Typography } from \"@mui/material\";\nimport ReactToPrint from \"react-to-print\";\nimport { TreatmentApi } from \"../../client/backend-api/treatment\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MainPageForPatient = () => {\n  _s();\n  const patientId = useParams();\n  let componentref = useRef();\n  const [appointments, setAppointments] = useState([]); //change to []\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const fetchHistory = async () => {\n    // !! UNCOMMENT!!\n    console.log(patientId);\n    const appointments = await TreatmentApi.getHistoryOfPatient(patientId.patientId);\n    setAppointments(appointments);\n  };\n  useEffect(() => {\n    fetchHistory().catch(console.error);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${classes.pageHeader} ${classes.mb2} `,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \" History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReactToPrint, {\n        trigger: () => {\n          return /*#__PURE__*/_jsxDEV(Button, {\n            size: \"small\",\n            variant: \"outlined\",\n            endIcon: /*#__PURE__*/_jsxDEV(PrintIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 38\n            }, this),\n            children: \"Print\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 32\n          }, this);\n        },\n        content: () => componentref,\n        documentTitle: \"my history\",\n        pageStyle: \"print\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), appointments.length > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => componentref = el,\n        className: classes.tableContainer,\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          component: Paper,\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            stickyHeader: true,\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Doctor\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: \"Medication\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: (rowsPerPage > 0 ? appointments.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : appointments).map(appointment => /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  children: appointment.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: appointment.doctorName + appointment.doctorSurname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"center\",\n                  children: appointment.treat\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 45\n                }, this)]\n              }, appointment.ID, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n          onRowsPerPageChange: e => {\n            setRowsPerPage(parseInt(e.target.value, 10));\n            setPage(0);\n          },\n          component: \"div\",\n          count: appointments.length,\n          rowsPerPage: rowsPerPage,\n          page: page,\n          onPageChange: (e, newPage) => setPage(newPage)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Typography, {\n      align: \"center\",\n      variant: \"h5\",\n      children: \"No appointments found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n};\n_s(MainPageForPatient, \"PZJdT/ZnlXtpAqp6zBJh6DFZkBk=\", false, function () {\n  return [useParams];\n});\n_c = MainPageForPatient;\nvar _c;\n$RefreshReg$(_c, \"MainPageForPatient\");","map":{"version":3,"names":["useEffect","useRef","useState","classes","PrintIcon","Button","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Typography","ReactToPrint","TreatmentApi","useParams","MainPageForPatient","patientId","componentref","appointments","setAppointments","page","setPage","rowsPerPage","setRowsPerPage","fetchHistory","console","log","getHistoryOfPatient","catch","error","pageHeader","mb2","length","el","tableContainer","slice","map","appointment","date","doctorName","doctorSurname","treat","ID","e","parseInt","target","value","newPage"],"sources":["/Users/inabat/Documents/projects/software-engineering/densysme-frontend/src/components/main-pages/mainpage-for-patient.js"],"sourcesContent":["import {useEffect, useRef, useState} from \"react\";\nimport classes from \"./styles.module.css\";\nimport PrintIcon from '@mui/icons-material/Print';\nimport {\n    Button,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TablePagination,\n    TableRow,\n    Typography\n} from \"@mui/material\";\nimport ReactToPrint from \"react-to-print\";\nimport { TreatmentApi } from \"../../client/backend-api/treatment\";\nimport {useParams} from \"react-router-dom\";\n\nexport const MainPageForPatient = () => {\n    const patientId = useParams()\n    let componentref = useRef()\n    const [appointments, setAppointments] = useState([])       //change to []\n    const [page, setPage] = useState(0)\n    const [rowsPerPage, setRowsPerPage] = useState(10)\n\n    const fetchHistory = async () => {\n        // !! UNCOMMENT!!\n        console.log(patientId)\n        const appointments = await TreatmentApi.getHistoryOfPatient(patientId.patientId)\n        setAppointments(appointments)\n    }\n\n\n    useEffect(() => {\n        fetchHistory().catch(console.error)\n    }, [])\n\n    return(\n        <>\n            <div className={`${classes.pageHeader} ${classes.mb2} `}>\n                <Typography variant=\"h5\" > History</Typography>\n                <ReactToPrint\n                    trigger={()=>{\n                        return <Button\n                            size=\"small\"\n                            variant=\"outlined\"\n                            endIcon={<PrintIcon/>}>\n                            Print\n                        </Button>\n                    }}\n                    content={()=>\n                        componentref\n                    }\n                    documentTitle=\"my history\"\n                    pageStyle=\"print\"\n\n                >\n\n                </ReactToPrint>\n            </div>\n            {appointments.length > 0 ? (\n                <>\n                    <div ref={el=>(componentref = el)} className={classes.tableContainer}>\n                        <TableContainer component={Paper}>\n                            <Table stickyHeader>\n                                <TableHead>\n                                    <TableRow>\n                                        <TableCell>Date</TableCell>\n                                        <TableCell align=\"center\">Doctor</TableCell>\n                                        <TableCell align=\"center\">Medication</TableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {(rowsPerPage > 0\n                                            ? appointments.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                            : appointments\n                                    ).map((appointment) => (\n                                        <TableRow key={appointment.ID}>\n                                            <TableCell component=\"th\" scope=\"row\">\n                                                {appointment.date}\n                                            </TableCell>\n                                            <TableCell align=\"center\">{appointment.doctorName + appointment.doctorSurname}</TableCell>\n                                            <TableCell align=\"center\">{appointment.treat}</TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </TableContainer>\n                        <TablePagination\n                            onRowsPerPageChange={(e) => {\n                                setRowsPerPage(parseInt(e.target.value, 10))\n                                setPage(0)\n                            }}\n                            component=\"div\"\n                            count={appointments.length}\n                            rowsPerPage={rowsPerPage}\n                            page={page}\n                            onPageChange={(e, newPage) => setPage(newPage)}\n                        />\n                    </div>\n                </>\n            ) : (\n                <Typography align=\"center\" variant=\"h5\">No appointments found!</Typography>\n            )}\n\n        </>\n\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}