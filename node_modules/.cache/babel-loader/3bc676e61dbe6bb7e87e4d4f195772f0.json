{"ast":null,"code":"import axios from \"axios\";\nconst ENDPOINT = \"http://localhost:8000\";\nexport const TreatmentApi = {\n  getAppsOfDoc: async docId => {\n    const res = await axios.get(ENDPOINT + \"/api/med/doctor/\" + docId).then(r => {\n      return r.data;\n    });\n    return res;\n  },\n  getHistoryOfPatient: async patientId => {\n    const res = await axios.get(ENDPOINT + \"/api/med/user/\" + patientId).then(r => {\n      return r.data;\n    });\n    return res;\n  },\n  getAllMedRecords: async () => {\n    const res = await axios.get(ENDPOINT + \"/api/med/all\").then(r => {\n      return r.data;\n    });\n    console.log(res);\n    return res;\n  },\n  updateTreatment: async (treatId, data) => {\n    //data is the treatment data\n    let treatData = {\n      \"treat\": data\n    };\n    const response = await axios({\n      method: \"post\",\n      url: ENDPOINT + \"/api/treat/\" + treatId,\n      data: JSON.stringify(treatData),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response.data;\n  }\n};","map":{"version":3,"names":["axios","ENDPOINT","TreatmentApi","getAppsOfDoc","docId","res","get","then","r","data","getHistoryOfPatient","patientId","getAllMedRecords","console","log","updateTreatment","treatId","treatData","response","method","url","JSON","stringify","headers"],"sources":["/Users/inabat/Documents/projects/software-engineering/densysme-frontend/src/client/backend-api/treatment.js"],"sourcesContent":["import axios from \"axios\";\n\nconst ENDPOINT = \"http://localhost:8000\";\n\nexport const TreatmentApi = {\n    getAppsOfDoc: async(docId) =>{\n        const res = await axios.get(ENDPOINT + \"/api/med/doctor/\" + docId).then(r =>{\n            return r.data\n        })\n        return res\n    },\n    getHistoryOfPatient: async (patientId) =>{\n        const res = await axios.get(ENDPOINT + \"/api/med/user/\" + patientId).then(r =>{\n            return r.data\n        })\n        return res\n    },\n    getAllMedRecords: async () =>{\n        const res =  await axios.get(ENDPOINT + \"/api/med/all\").then(r => {\n            return r.data\n        })\n        console.log(res);\n        return res\n    },\n    updateTreatment: async (treatId, data) =>{ //data is the treatment data\n        let treatData = {\"treat\": data}\n        const response = await axios({\n            method: \"post\",\n            url: ENDPOINT + \"/api/treat/\" + treatId,\n            data: JSON.stringify(treatData),\n            headers: { \"Content-Type\": \"application/json\" },\n        })\n        return response.data\n    }\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,QAAQ,GAAG,uBAAuB;AAExC,OAAO,MAAMC,YAAY,GAAG;EACxBC,YAAY,EAAE,MAAMC,KAAK,IAAI;IACzB,MAAMC,GAAG,GAAG,MAAML,KAAK,CAACM,GAAG,CAACL,QAAQ,GAAG,kBAAkB,GAAGG,KAAK,CAAC,CAACG,IAAI,CAACC,CAAC,IAAG;MACxE,OAAOA,CAAC,CAACC,IAAI;IACjB,CAAC,CAAC;IACF,OAAOJ,GAAG;EACd,CAAC;EACDK,mBAAmB,EAAE,MAAOC,SAAS,IAAI;IACrC,MAAMN,GAAG,GAAG,MAAML,KAAK,CAACM,GAAG,CAACL,QAAQ,GAAG,gBAAgB,GAAGU,SAAS,CAAC,CAACJ,IAAI,CAACC,CAAC,IAAG;MAC1E,OAAOA,CAAC,CAACC,IAAI;IACjB,CAAC,CAAC;IACF,OAAOJ,GAAG;EACd,CAAC;EACDO,gBAAgB,EAAE,YAAW;IACzB,MAAMP,GAAG,GAAI,MAAML,KAAK,CAACM,GAAG,CAACL,QAAQ,GAAG,cAAc,CAAC,CAACM,IAAI,CAACC,CAAC,IAAI;MAC9D,OAAOA,CAAC,CAACC,IAAI;IACjB,CAAC,CAAC;IACFI,OAAO,CAACC,GAAG,CAACT,GAAG,CAAC;IAChB,OAAOA,GAAG;EACd,CAAC;EACDU,eAAe,EAAE,OAAOC,OAAO,EAAEP,IAAI,KAAI;IAAE;IACvC,IAAIQ,SAAS,GAAG;MAAC,OAAO,EAAER;IAAI,CAAC;IAC/B,MAAMS,QAAQ,GAAG,MAAMlB,KAAK,CAAC;MACzBmB,MAAM,EAAE,MAAM;MACdC,GAAG,EAAEnB,QAAQ,GAAG,aAAa,GAAGe,OAAO;MACvCP,IAAI,EAAEY,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC;MAC/BM,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB;IAClD,CAAC,CAAC;IACF,OAAOL,QAAQ,CAACT,IAAI;EACxB;AACJ,CAAC"},"metadata":{},"sourceType":"module"}